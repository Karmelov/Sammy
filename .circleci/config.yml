version: 2
jobs:
  deploy_to_prod:
    docker:
      - image: circleci/python:3.7.1
    steps:
      - checkout
      - run:
          name: install sam
          command: sudo pip3 install awscli aws-sam-cli
      - deploy:
          name: deploy on prod
          command: |
            sam build
            sam deploy --stack-name Sammy
  run_tests_on_branch:
    docker:
      - image: circleci/python:3.7.1
    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "requirements.txt" }}
            - v2-dependencies-
      - run:
          name: install dependencies
          command: |
            PYTHON_BINS_PATH=$(python3 -m site --user-base)
            export PATH=$PATH:$PYTHON_BINS_PATH
            python3 -m venv venv
            . venv/bin/activate
            sudo pip3 install -r requirements.txt
            sudo pip3 install awscli aws-sam-cli
      - save_cache:
          paths:
            - ./venv
          key: v2-dependencies-{{ checksum "requirements.txt" }}
      - run:
          name: validate template
          command: sam validate
      - run:
          name: run unit tests
          command: tox -e py37-unit
      - run:
          name: deploy on stage
          command: |
            sam build
            sam deploy
      - run:
          name: run integration tests
          command: |
            export SAMMY_HOST=$(aws cloudformation describe-stacks --stack-name Sammy-stage --query "Stacks[0].Outputs[?OutputKey=='SammyApi'].OutputValue" --output text)
            tox -e py37-integration

workflows:
  version: 2
  test_branch:
    jobs:
      - run_tests_on_branch:
          filters:
            branches:
              ignore:
                - master
  deploy_master:
    jobs:
      - deploy_to_prod:
          filters:
            branches:      
              only:
                - master

