import os
import secrets
import string
import hashlib

class PasswordManager:

    SALT_LENGTH = 20
    HASH_LENGTH = 128
    HASH_ITERATIONS = 186

    @staticmethod
    def hash_password(password, salt=None):
        if salt is None:
            salt_string = ''.join([secrets.choice(string.hexdigits) for i in range(PasswordManager.SALT_LENGTH)])
        else:
            salt_string = salt

        hash_string = hashlib.pbkdf2_hmac(
            'sha256',
            password.encode('utf-8'),
            salt_string.encode('utf-8'),
            PasswordManager.HASH_ITERATIONS,
            dklen=PasswordManager.HASH_LENGTH).hex()

        return salt_string + hash_string

    @staticmethod
    def validate_password(password, hash_string):
        salt_string = hash_string[0:PasswordManager.SALT_LENGTH]
        result_hash = PasswordManager.hash_password(password, salt_string)

        return result_hash == hash_string

