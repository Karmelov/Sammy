AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Sammy
  Sample SAM Template for Sammy

Globals:
  Function:
    Handler: app.lambda_handler
    Runtime: python3.7
    Timeout: 5

Resources:
  GetUsers:
    DependsOn: UsersTable
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambda_code/users/get
      Layers:
        - !Ref Repositories
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref UsersTable
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Ref JwtSecret
      Environment:
        Variables:
          USERS_TABLE_NAME: !Ref UsersTable
          JWT_SECRET_NAME: !Ref JwtSecret
      Events:
        GetUsers:
          Type: Api 
          Properties:
            Path: /users/{id}
            Method: get
  PostUser:
    DependsOn: UsersTable
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambda_code/users/post
      Layers:
        - !Ref Repositories
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersTable
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Ref JwtSecret
      Environment:
        Variables:
          USERS_TABLE_NAME: !Ref UsersTable
          JWT_SECRET_NAME: !Ref JwtSecret
      Events:
        PostUser:
          Type: Api
          Properties:
            Path: /users
            Method: post
  Auth:
    DependsOn: UsersTable
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambda_code/auth
      Layers:
        - !Ref Repositories
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersTable
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Ref JwtSecret
      Environment:
        Variables:
          USERS_TABLE_NAME: !Ref UsersTable
          JWT_SECRET_NAME: !Ref JwtSecret
      Events:
        AuthUser:
          Type: Api
          Properties:
            Path: /auth
            Method: post
  UsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: username
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: username-index
          KeySchema:
            - AttributeName: username
              KeyType: HASH
          Projection:
            NonKeyAttributes: []
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 2
            WriteCapacityUnits: 2
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2
  Repositories:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: SammyRepositories
      Description: Repositories to access model's data
      ContentUri: layers/SammyService
      CompatibleRuntimes:
        - python3.7
      LicenseInfo: 'MIT'
      RetentionPolicy: Retain
  JwtSecret:
    Type: AWS::SecretsManager::Secret
 

Outputs:
  SammyApi:
    Description: "API Gateway endpoint URL for stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
